{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-hw7/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState({\n    id: 1,\n    title: 'react hooks',\n    completed: false\n  });\n  fetch('https://jsonplaceholder.typicode.com/todos/').then(response => response.json()); // .then(list => setList(list))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map(listItem => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: listItem.title\n        }, listItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"h3ck2xhFXmwdaVgJlfPy19+ttRI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","list","setList","id","title","completed","fetch","then","response","json","map","listItem"],"sources":["/Users/user/Documents/React.Hillel/react-hw7/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nfunction App() {\n\n    const [list, setList] = useState(\n        {id:1, title: 'react hooks', completed:false}\n    )\n\n    fetch('https://jsonplaceholder.typicode.com/todos/')\n        .then(response => response.json())\n        // .then(list => setList(list))\n\n  return (\n   <div>\n       <h1>React hooks</h1>\n        <div>\n            <ul>\n                {list.map(listItem=> <li key={listItem.id}>{listItem.title}</li>)}\n            </ul>\n        </div>\n   </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAC5B;IAACI,EAAE,EAAC,CAAJ;IAAOC,KAAK,EAAE,aAAd;IAA6BC,SAAS,EAAC;EAAvC,CAD4B,CAAhC;EAIAC,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EANW,CAQP;;EAEN,oBACC;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEK;MAAA,uBACI;QAAA,UACKR,IAAI,CAACS,GAAL,CAASC,QAAQ,iBAAG;UAAA,UAAuBA,QAAQ,CAACP;QAAhC,GAASO,QAAQ,CAACR,EAAlB;UAAA;UAAA;UAAA;QAAA,QAApB;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAUD;;GApBQH,G;;KAAAA,G;AAsBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}